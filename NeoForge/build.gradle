plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'net.neoforged.gradle.userdev' version '7.0.165'
}

base {
	archivesName = "${mod_name}-neoforge-${mod_version}"
}

runs {
	configureEach {
		systemProperty 'forge.logging.markers', 'REGISTRIES'
		systemProperty 'forge.logging.console.level', 'debug'

		modSource project.sourceSets.main
	}

	client {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
	}

	server {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
		programArgument '--nogui'
	}

	gameTestServer {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
	}

	data {
		getArguments().addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	implementation "net.neoforged:neoforge:${neo_version}"
	compileOnly project(":Common")
}

tasks.named('compileJava', JavaCompile).configure {
	source(project(":Common").sourceSets.main.allSource)
}

processResources {
	from project(":Common").sourceSets.main.resources
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}